# Generated by Django 4.1 on 2022-11-05 13:44

import Post.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("Post", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tmp_name",
                    models.CharField(
                        default=Post.models.generate_random_name, max_length=20
                    ),
                ),
                ("last_modified", models.DateTimeField(auto_now_add=True)),
                ("post_title", models.TextField()),
                ("post_content", models.TextField()),
                ("likes", models.IntegerField(default=0)),
                ("watches", models.IntegerField(default=0)),
                ("stars", models.IntegerField(default=0)),
                ("comments", models.IntegerField(default=0)),
                (
                    "tag",
                    models.CharField(
                        choices=[
                            ("s", "life is meaningless"),
                            ("h", "I am a procrastinator"),
                            ("i", "want to die"),
                            ("t", "venomous!"),
                            ("a", "I am a piece of shit"),
                            ("b", "I am the black sheep"),
                        ],
                        default="s",
                        max_length=30,
                    ),
                ),
                (
                    "browser",
                    models.ManyToManyField(
                        blank=True,
                        related_name="user_browser",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="browsered by some user",
                    ),
                ),
                (
                    "favorite",
                    models.ManyToManyField(
                        blank=True,
                        related_name="user_favorite",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="collected by some user",
                    ),
                ),
                (
                    "posted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_post",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="posted by some user",
                    ),
                ),
                (
                    "vote",
                    models.ManyToManyField(
                        blank=True,
                        related_name="user_vote",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="vote by some user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Draft",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("draft_title", models.TextField()),
                ("draft_content", models.TextField()),
                ("tag", models.CharField(default="default", max_length=30)),
                (
                    "drafted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_draft",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="draft drafted by some user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tmp_name",
                    models.CharField(
                        default=Post.models.generate_random_name, max_length=20
                    ),
                ),
                ("comment_content", models.TextField(default="")),
                ("comment_time", models.DateTimeField(auto_now_add=True)),
                ("likes", models.IntegerField(default=0)),
                (
                    "comment_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_comment",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="comment by some user",
                    ),
                ),
                (
                    "comment_under",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_comment",
                        to="Post.post",
                        verbose_name="comment under some post",
                    ),
                ),
                (
                    "reply_to",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comment_comment",
                        to="Post.comment",
                        verbose_name="commeng on other comment",
                    ),
                ),
            ],
        ),
    ]
